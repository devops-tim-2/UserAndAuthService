version: '3'
networks:
  apigateway_the_network:
    external: true
services:
  user_backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: 'python main.py'
    ports:
      - 8082:5000
    volumes:
      - .:/app
    depends_on:
      - user_queue
    environment:
      FLASK_ENV: development
      FLASK_RUN_HOST: 0.0.0.0

      DB_TYPE: postgresql
      DB_DRIVER: psycopg2
      DB_USER: test
      DB_PASSWORD: test
      DB_HOST: user_db
      DB_NAME: main

 
      TEST_DATABASE_URI: sqlite:///database.db
      DEV_DATABASE_URI: postgresql+psycopg2://test:test@user_db/main
      SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://test:test@user_db/main
      RABBITMQ_URI: amqps://qilglokd:nlmVctERVcA7th3VCE1-UL_uij-BCXyj@roedeer.rmq.cloudamqp.com/qilglokd

      KEY: ${KEY}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      JWT_SECRET: ${JWT_SECRET}
    hostname: userservice
    networks:
      - apigateway_the_network

  user_queue:
    build:
      context: .
      dockerfile: Dockerfile
    command: 'python -u consume.py'
    depends_on:
      - user_db
    environment:
      TEST_DATABASE_URI: sqlite:///database.db
      DEV_DATABASE_URI: postgresql+psycopg2://test:test@user_db/main
      SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://test:test@user_db/main
      RABBITMQ_URI: amqps://qilglokd:nlmVctERVcA7th3VCE1-UL_uij-BCXyj@roedeer.rmq.cloudamqp.com/qilglokd
    networks:
      - apigateway_the_network

  user_db:
    image: postgres:latest
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_DB: main
    volumes:
      - .dbdata:/var/lib/postgresql
    ports:
      - 54322:5432
    networks:
      - apigateway_the_network  